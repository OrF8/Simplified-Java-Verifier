// This test is toying around with final variables in methods

// Check illegal lines of code:
// הםןג כןמשך_A = 5;
// אני לא גיי, נעם כן.

final int global_final_a = 5;
boolean b = true;

void accept_int(int x) {
	return;
}

void method_with_not_final_param (int x) {
	return;
}

void method_with_final_param (final String str) {
    return;
}

// check that a final variable can be passed into arg that isn't final, from within and outside,
// Allowed per the school solution
void Checker_Method() {
	final int inner_final_a = 5;

// both should work;
	method_with_not_final_param(inner_final_a);
	method_with_not_final_param(global_final_a);	
	return;
}

// check that a method that expects final variables can accept non-final
void Checker_Method2() {
    final String finalStr = "final";
    String str = "not final";

// should work:
    method_with_final_param(finalStr);
    method_with_final_param(str);
    return;
}

// check that a method that has a final arg does not change it
void change_final_param(final int x) {
//    x = 4;
    return;
}


// check that inner scope is checked first
void ScopeChecker() {
	int b = 5;
// there is a global variable b with incompatible type, but this should work
// since inner b is checked first.
	accept_int(b);
	return;
}	
